config.tx_extbase.objects {
	Innologi\StreamovationsVp\Library\Rest\ResponseFactoryInterface {
		className = Innologi\StreamovationsVp\Library\Rest\ResponseFactory
	}
	Innologi\StreamovationsVp\Library\Rest\ResponseInterface {
		className = Innologi\StreamovationsVp\Library\Rest\MagicResponse
	}
	Innologi\StreamovationsVp\Library\Rest\RequestFactoryInterface {
		className = Innologi\StreamovationsVp\Library\Rest\RequestFactory
	}
	Innologi\StreamovationsVp\Library\Rest\RequestInterface {
		className = Innologi\StreamovationsVp\Library\Rest\Typo3Request
	}
	Innologi\StreamovationsVp\Library\Rest\RequestUriInterface {
		className = Innologi\StreamovationsVp\Library\Rest\RequestUri
	}
}

plugin.tx_streamovationsvp {
	view {
		templateRootPaths.10 = {$plugin.tx_streamovationsvp.view.templateRootPath}
		partialRootPaths.10 = {$plugin.tx_streamovationsvp.view.partialRootPath}
		layoutRootPaths.10 = {$plugin.tx_streamovationsvp.view.layoutRootPath}
	}
	persistence {
		storagePid = {$plugin.tx_streamovationsvp.persistence.storagePid}
	}
	rest {
		features {
			# only works for request types that support it
			ignoreHttpConfiguration = 0
			# model-less fallback, for development purposes only
			disableResponseMapper = 1
		}
		repository {
			default.request {
				protocol = http
				baseUri = digiraad.heemskerk.nl
				apiUri = api.php
			}
			event {
				request.apiUri = api.php/sessions/date
				response {
					container = ROOT.events
				}
			}
			playlist.request {
				apiUri = api.php/playlists/pub
			}
			meetingdata {
				request.apiUri = api.php/meetingdata
				response {
					property {
						timestamps {
							mappings {
								10 {
									name = topicTimeline
									if {
										field = metadataType
										value = topic
									}
									else {
										sendToMapping = 20
									}
								}
								20 {
									name = speakerTimeline
								}
							}
							remove = 1
						}
						topicTimeline.json = 1
						speakerTimeline.json = 1
					}
				}
			}
		}
	}
	settings {
		player = {$plugin.tx_streamovationsvp.settings.player}
		event {
			# supported formats: http://php.net/manual/en/datetime.formats.php
			dateFrom = 2014-09-29
			dateTo = 2014-12-11
			dateAt = 2014-12-10
			
			category =
			subCategory =
			tags =
		}
		playlist {
			#hash = {$plugin.tx_streamovationsvp.settings.playlist.hash}
			hash = 1f0e3dad99908345f7439f8ffabdffc4
		}
	}
	javascript {
		jQuery.external = 0
		jQuery = {$plugin.tx_streamovationsvp.javascript.jqueryLib}
		# jQuery.disableCompression = 1
		jwPlayer.external = 0
		jwPlayer = {$plugin.tx_streamovationsvp.javascript.jwPlayerLib}
		smvPlayer.external = 0
		smvPlayer = {$plugin.tx_streamovationsvp.javascript.smvPlayerLib}
		
		inlineJS = COA
		inlineJS {
			10 = TEMPLATE
			10.template = FILE
			10.template.file = {$plugin.tx_streamovationsvp.javascript.starterFile}
			10.marks {
				JWPLAYER_KEY = TEXT
				JWPLAYER_KEY.value = {$plugin.tx_streamovationsvp.settings.jwPlayerKey}
				PLAYER_TYPE = TEXT
				PLAYER_TYPE.value = {$plugin.tx_streamovationsvp.settings.player} 
			}
		}
	}
}

[globalVar = LIT:0 < {$plugin.tx_streamovationsvp.javascript.includeJquery}] 
page.includeJSlibs.streamovationsvp_jQuery < plugin.tx_streamovationsvp.javascript.jQuery

[globalVar = LIT:0 < {$plugin.tx_streamovationsvp.settings.player}]
page.includeJSlibs.streamovationsvp_jwPlayer < plugin.tx_streamovationsvp.javascript.jwPlayer
page.jsInline.198111210 < plugin.tx_streamovationsvp.javascript.inlineJS

[globalVar = LIT:1 < {$plugin.tx_streamovationsvp.settings.player}]
page.includeJSlibs.streamovationsvp_smvPlayer < plugin.tx_streamovationsvp.javascript.smvPlayer


[global]

plugin.tx_streamovationsvp._CSS_DEFAULT_STYLE (
	
	.tx-streamovations-vp .topics .topic {
		background-color: #eee;
		display:inline-block;
	}
	.tx-streamovations-vp .topics .topic.active {
		color:#f00;
		background-color:#fff;
	}
	
	.tx-streamovations-vp .speakers .speaker {
		opacity:0.5;
		background-color:#eee;
	}
	.tx-streamovations-vp .speakers .speaker.active {
		opacity:1;
		color:#f00;
		background-color:#fff;
	}
)
